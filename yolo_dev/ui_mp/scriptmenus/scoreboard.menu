#include "ui/menudef.h"

#ifdef PC
	#define 	SCOREBAR_OFFSET 0 4
#else
	#define 	SCOREBAR_OFFSET 0 0
#endif
	

{	
	menuDef  // Stub: the scoreboard is controlled by code
	{
		name			"scoreboard"
		rect			0 0 640 480
		onEsc 
		{
			//close scoreboard;
			open mod_stats;
			//setdvar ui_showEndOfGame "1";
		}

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 0 640 2 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			background		"line_horizontal_scorebar"
			forecolor		1 1 1 1
			visible			when( 1 );
			decoration
		}
		itemDef	
		{
			style			WINDOW_STYLE_SHADER
			rect			0 2 640 1 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			background		"line_horizontal_scorebar"
			forecolor		0 0 0 0.5
			visible			when( 1 );
			decoration
		}	
		
		itemDef	
		{
			style			WINDOW_STYLE_SHADER
			rect			0 21 640 1 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			background		"line_horizontal_scorebar"
			forecolor		0 0 0 0.5
			visible			when( 1 );
			decoration
		}	
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 22 640 2 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			background		"line_horizontal_scorebar"
			forecolor		1 1 1 1
			visible			when( 1 );
			decoration
		}
		
		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 -4 36 36 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			exp				material( dvarString( "g_TeamIcon_Allies" ) );
			visible			when ( team( name ) == "TEAM_ALLIES" ); 
			decoration
		}

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 -4 36 36 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			exp				material( dvarString( "g_TeamIcon_Allies" ) );
			visible			when (  team( name ) == "TEAM_SPECTATOR" ); 
			decoration
		}

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 -4 36 36 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			exp				material( dvarString( "g_TeamIcon_Axis" ) );
			visible			when ( team( name ) == "TEAM_AXIS" );
			decoration
		}

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			0 -4 36 36 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			exp				material( dvarString( "g_TeamIcon_Allies" ) );
			visible			when (  team( name ) == "TEAM_FREE" ); 
			decoration
		}

		itemDef 
		{
			rect		36 22 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( team( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when ( (team( name ) == "TEAM_ALLIES" || team( name ) == "TEAM_AXIS") )
			decoration 
		}

		itemDef 
		{
			rect		36 22 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( player( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when ( team( name ) == "TEAM_FREE" )
			decoration 
		}

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			95 -4 36 36 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			exp				material( dvarString( "g_TeamIcon_Allies" ) );
			visible			when ( team( name ) == "TEAM_AXIS" );
			decoration
		}

		itemDef
		{
			style			WINDOW_STYLE_SHADER
			rect			95 -4 36 36 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin			SCOREBAR_OFFSET
			exp				material( dvarString( "g_TeamIcon_Axis" ) );
			visible			when ( (team( name ) == "TEAM_ALLIES" || team( name ) == "TEAM_SPECTATOR") );
			decoration
		}

		itemDef 
		{
			rect		134 22 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( otherteam( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when ( (team( name ) == "TEAM_ALLIES" || team( name ) == "TEAM_AXIS") )
			decoration 
		}

		/*itemDef 
		{
			rect		0 22 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( gameTypeName() );
			textfont	UI_FONT_NORMAL
			textscale	TEXTSIZE_SMALL
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when( (timeLeft() % 8 < 4 || timeLeft() < 0) && !dvarInt( "splitscreen" ) && !isIntermission() )
			decoration 
		}*/
		/*itemDef 
		{
			rect		0 22 1 1 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			text		"Press ^2ESC to see statistics for this map"
			textfont	UI_FONT_NORMAL
			textscale	TEXTSIZE_SMALL
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when( isIntermission() )
			decoration 
		}*/

		itemDef 
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		2 32
			exp				text( locString( "@MENU_SCORE_WINNING_WITH", team( score ), dvarint( "ui_scorelimit" ) ) );
			textfont	UI_FONT_NORMAL
			textscale	TEXTSIZE_SMALL_SS
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when( (team( name ) == "TEAM_ALLIES" || team( name ) == "TEAM_AXIS") && team( score ) > otherteam( score ) && timeLeft() % 8 > 3 && dvarInt( "splitscreen" ) && !isIntermission() )
			decoration 
		}
		itemDef
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		2 32
			exp				text( locString( "@MENU_SCORE_LOSING_WITH", team( score ), dvarint( "ui_scorelimit" ) ) );
			textfont	UI_FONT_NORMAL
			textscale	TEXTSIZE_SMALL_SS
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when( (team( name ) == "TEAM_ALLIES" || team( name ) == "TEAM_AXIS") && team( score ) < otherteam( score ) && timeLeft() % 8 > 3 && dvarInt( "splitscreen" ) && !isIntermission() )
			decoration 
		}
		itemDef
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		2 32
			exp				text( locString( "@MENU_SCORE_TIED_WITH", team( score ), dvarint( "ui_scorelimit" ) ) );
			textfont	UI_FONT_NORMAL
			textscale	TEXTSIZE_SMALL_SS
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when( (team( name ) == "TEAM_ALLIES" || team( name ) == "TEAM_AXIS") && team( score ) == otherteam( score ) && timeLeft() % 8 > 3 && dvarInt( "splitscreen" ) && !isIntermission() )
			decoration 
		}
		itemDef 
		{
			rect		0 0 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		2 32
			exp text	( gameTypeName() );
			textfont	UI_FONT_NORMAL
			textscale	TEXTSIZE_SMALL_SS
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when( (timeLeft() % 8 < 4 || timeLeft() < 0) && dvarInt( "splitscreen" ) )
			decoration 
		}


		itemDef 
		{
			rect		36 22 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( marinesfield( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when ( team( name ) == "TEAM_SEPCTATOR" && !dvarInt( "splitscreen" ) )
			decoration 
		}

		itemDef 
		{
			rect		134 22 1 1 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
			origin		SCOREBAR_OFFSET
			exp text	( opforfield( score ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_LEFT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when ( team( name ) == "TEAM_SEPCTATOR" && !dvarInt( "splitscreen" ) )
			decoration 
		}

		#ifdef PUBLIC_BETA
			#define TIMEOFFSET 18
		#else
			#define TIMEOFFSET 0
		#endif

		itemDef 
		{
			rect		SCOREBAR_OFFSET 1 1 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			origin		0 (22+TIMEOFFSET)
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_RIGHT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			visible 	when ( timeLeft() >= 30 && !dvarInt( "splitscreen" ) );
			decoration 
		}

		itemDef 
		{
			rect		SCOREBAR_OFFSET 1 1 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			origin		0 (22+TIMEOFFSET)
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_RIGHT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 0.75 0 1
			visible 	when ( timeLeft() >= 10 && timeLeft() < 30 && !dvarInt( "splitscreen" ) );
			decoration 
		}

		itemDef 
		{
			rect		SCOREBAR_OFFSET 1 1 HORIZONTAL_ALIGN_RIGHT VERTICAL_ALIGN_TOP
			origin		0 (22+TIMEOFFSET)
			exp text	( secondsAsCountdown( timeLeft() ) );
			textfont	UI_FONT_OBJECTIVE
			textscale	0.4
			textalign	ITEM_ALIGN_RIGHT
			textstyle	ITEM_TEXTSTYLE_SHADOWEDMORE
			forecolor	1 0.5 0 1
			visible 	when ( timeLeft() >= 0 && timeLeft() < 10 && !dvarInt( "splitscreen" ) );
			decoration 
		}


		itemDef	
		{
			style			WINDOW_STYLE_SHADER
			rect			-100 180 200 20 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			//exp				rect X(-100+(cos(milliseconds()/720) * 10))

			forecolor		1 1 1 1
			background		"popmenu_bg"
			visible			when( 1 ) 
			decoration
		}

		itemDef
		{
			name			leave
			text			"Press ^2ESC ^7see your Statistics"
			type			ITEM_TYPE_BUTTON
			rect			-100 180 200 20 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			//exp				rect X(-100+(cos(milliseconds()/720) * 10))
			forecolor		1 1 1 0.85
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			visible			when( 1 ) 
			textfont		6
			textscale		0.2

			onFocus 
			{
				play "mouse_over";
			}
			action 
			{
				play "mouse_click";
				close self;
			}
		}

	}

}
